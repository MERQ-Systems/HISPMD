<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_sgb_merge  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["BeforeShowList"]=true;

		$this->events["BeforeShowAdd"]=true;

		$this->events["BeforeProcessList"]=true;



		$this->events["BeforeAdd"]=true;

		$this->events["AfterAdd"]=true;

		$this->events["BeforeShowEdit"]=true;

		$this->events["BeforeMoveNextList"]=true;

		$this->events["ProcessValuesAdd"]=true;

		$this->events["BeforeQueryList"]=true;


		$this->events["ProcessValuesEdit"]=true;

		$this->events["BeforeEdit"]=true;



	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before display
function BeforeShowList(&$xt, &$templatefile, $pageObject)
{

		$style = "sgb_suggestions_list sgb ".postvalue("orderby");
if(Security::isLoggedIn()){
	$style.= " login ".Security::getUserGroup();
}
$xt->assign("stylename",$style);
if(!Security::isLoggedIn() || Security::getUserGroup()!=="admin"){
	$pageObject->hideItem("sgb_admin_notification");
	$pageObject->hideItem("sgb_admin_panel_link");

}

if(Security::getUserGroup()!=="admin"){
	$pageObject->hideItem("sgb_showdeleted");
}
$pageObject->AddCSSFile("styles/sgb.css");



;
} // function BeforeShowList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before display
function BeforeShowAdd(&$xt, &$templatefile, $pageObject)
{

		$xt->assign("stylename","sgb_suggestions_add sgb alreadyposted");
$pageObject->AddCSSFile("styles/sgb.css");
;
} // function BeforeShowAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

				// List page: Before process
function BeforeProcessList($pageObject)
{

		if(postvalue("orderby")==false){
	$_SESSION[ $pageObject->sessionPrefix . "_orderby" ] = array( "orderby" => "dvote", "sortby" => null);
}
$_SESSION["status"] = null;
if(postvalue("f")!=false){
	$find = array();
	preg_match_all("/\(status~equals~(.+)\)/U",postvalue("f"),$find);
	if(isset($find[1]) && isset($find[1][0])) 
		$_SESSION["status"] = $find[1][0];
}
if(postvalue("status")!=false)
	$_SESSION["status"] = postvalue("status"); 

$pageObject->hideItem("sgb_change_info");
if(Security::getUserGroup()!=="admin"){
	$pageObject->hideItem("sgb_EditSuggestion");
	$pageObject->hideItem("sgbMergerSuggestion");
	$pageObject->hideItem("sgb_splitSuggestion");
	$pageObject->hideItem("sgb_status_change");
	$pageObject->hideItem("sgb_category_change");
}

if(Security::getUserGroup()==="admin"){
	if(postvalue("pin") !=false){
		DB::Update("sgb_suggestions",array("pinned"=>1),array("id" => postvalue("pin")));
		exit();
	}
	if(postvalue("unpin") !=false){
		DB::Update("sgb_suggestions",array("pinned"=>0),array("id" => postvalue("unpin")));
		exit();
	}
	if(postvalue("showDeleted") !=false){
		$_SESSION["showDeleted"] = intval(postvalue("showDeleted"));
		if($_SESSION["showDeleted"] < 0) $_SESSION["showDeleted"] = 0;
		exit();
	}

}


;
} // function BeforeProcessList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before record added
function BeforeAdd(&$values, &$message, $inline, $pageObject)
{

		if(!Security::isLoggedIn()){
	if(!isset($_COOKIE["sgb_gsid"])){
		$sgb_gsid = time();
		runner_setcookie("sgb_gsid", $sgb_gsid, time() + 5 * 365 * 86400, "", "", false, false);
		runner_setcookie("sgb_name", $values["name"], time() + 5 * 365 * 86400, "", "", false, false);
		runner_setcookie("sgb_email", $values["email"], time() + 5 * 365 * 86400, "", "", false, false);
	}
	else{
		$sgb_gsid = $_COOKIE["sgb_gsid"];
	}
}
if(Security::getUserGroup() === "admin") {
	$values["status"] = "approved";
	$values["suggested_by"] = $_SESSION["uid"];
}
else {
	$values["status"] = "awaiting_approval";
	$values["suggested_by"] = $sgb_gsid;
}
$ts = time();
$values["vote"] = 0;
$values["created_date"] = getYMDdate($ts) . " " . getHISdate($ts);
$values["ip"] = $_SERVER["REMOTE_ADDR"];
return true;


;
} // function BeforeAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// After record added
function AfterAdd(&$values, &$keys, $inline, $pageObject)
{

		
HeaderRedirect("sgb_comments","list","masterkey1=".$keys["id"]."&mastertable=sgb_suggestions");
exit();
;
} // function AfterAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before display
function BeforeShowEdit(&$xt, &$templatefile, $values, $pageObject)
{

		$xt->assign("stylename","sgb_suggestions_merge sgb_suggestions_add sgb");
$pageObject->AddCSSFile("styles/sgb.css");
;
} // function BeforeShowEdit

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// List page: After record processed
function BeforeMoveNextList(&$data, &$row, &$record, $recordId, $pageObject)
{

		
$row["rowattrs"] = $row["rowattrs"]." ".$data["status"];

;
} // function BeforeMoveNextList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Process record values
function ProcessValuesAdd(&$values, $pageObject)
{

		if(Security::getUserGroup() === "admin"){
	$values["name"] = $_SESSION["udata"][GetDisplayNameField()];
	$values["email"] = $_SESSION["udata"][GetEmailField()];
}
if(!Security::isLoggedIn()){
	if(isset($_COOKIE["sgb_gsid"])){
		$values["name"] = $_COOKIE["sgb_name"];
		$values["email"] = $_COOKIE["sgb_email"];
	}

}
;
} // function ProcessValuesAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// List page: Before SQL query
function BeforeQueryList(&$strSQL, &$strWhereClause, &$strOrderBy, $pageObject)
{

		
$strOrderBy = str_replace("ORDER BY ","ORDER BY pinned DESC,",$strOrderBy);
;
} // function BeforeQueryList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Process record values
function ProcessValuesEdit(&$values, $pageObject)
{

		$values["search_s"] = null;
$values["comment_convert"] = 0;
$_SESSION["cur_suggestion"] = $values["id"];
;
} // function ProcessValuesEdit

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before record updated
function BeforeEdit(&$values, $where, &$oldvalues, &$keys, &$message, $inline, $pageObject)
{

		$m_suggetstion_rs = DB::Select("sgb_suggestions",array("id" => $values['search_s']));
$m_suggetstion = $m_suggetstion_rs->fetchAssoc();
$cur_rs = DB::Select("sgb_suggestions",array("id" => $keys["id"]));
$values_s = $cur_rs->fetchAssoc();

$comment_count = DBLookup("select count(*) from ".AddTableWrappers("sgb_comments")." where ".AddFieldWrappers("s_id")."=".$keys["id"]);
DB::Update("sgb_comments",array("s_id" => $values['search_s']),array("s_id" =>$keys["id"] ));

$comment = array(
	"ip" =>$values_s["ip"],
	"status" => "approved",
	"created_date" => time(),
	"merged_info" => 1,
	"s_id" => $values['search_s']
);

if(intval($values["comment_convert"])){
	$comment["user_id"] = $_SESSION["uid"];
	$comment["name"] = $_SESSION["udata"][GetDisplayNameField()];
	$comment["email"] = $_SESSION["udata"][GetEmailField()];
	$comment["comment"] = "'".$values_s["title"]."'(suggested by ".$values["name"]." on ".runner_date_format("Y-m-d",strtotime($values_s["created_date"]))."), including upvotes (".$values_s["vote"].") and comments (".$comment_count."), was merged into this suggestion";
}
else{
	$comment["name"] = $values_s["name"];
	$comment["email"] = $values_s["email"];
	$comment["comment"] = $values_s["suggestion"];
}

DB::Insert("sgb_comments",$comment);
DB::Update("sgb_suggestions",array("vote" => intval($m_suggetstion["vote"]) + intval($values_s["vote"])),array("id" => $values['search_s']));

$curVoitesRs = DB::Select("sgb_votes",array("s_id" => $keys["id"]));
while( $curVoite = $curVoitesRs->fetchAssoc() ){
	DB::Insert("sgb_votes",array("s_id",$m_suggetstion["id"],"user_id",$curVoite["user_id"],"ip",$curVoite["ip"]));
}

DB::Delete("sgb_votes", array("s_id" => $keys["id"]));



DB::Update("sgb_suggestions",array("status" => "merged"),array("id" => $keys["id"]));

echo "<style>.been_merged {background: #fff;border-left:10px solid #39B549 !important;border-radius: 4px;border-color: transparent;text-shadow: none;box-shadow: 0 2px 4px rgb(0 0 0 / 20%);font-size: 14px;font-weight: 600;padding: 16px;color: #15272e;width: 100%;display: block;}</style>";
echo "<span class='been_merged'>This suggestion has been merged into another suggestion:<br> <a target='_blank' href='".GetTableLink("sgb_comments","list","masterkey1=".$m_suggetstion["id"]."&mastertable=sgb_suggestions")."'>".$m_suggetstion["title"]."</a></span>";
exit();
return false;
;
} // function BeforeEdit

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>