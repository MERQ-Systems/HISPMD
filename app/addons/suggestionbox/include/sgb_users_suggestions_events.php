<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_sgb_users_suggestions  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["BeforeShowList"]=true;

		$this->events["BeforeShowAdd"]=true;

		$this->events["BeforeAdd"]=true;

		$this->events["AfterAdd"]=true;

		$this->events["BeforeShowEdit"]=true;

		$this->events["AfterEdit"]=true;

		$this->events["ProcessValuesAdd"]=true;





	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before display
function BeforeShowList(&$xt, &$templatefile, $pageObject)
{

		$style = "sgb_suggestions_list sgb ".postvalue("orderby");
if(Security::isLoggedIn()){
	$style.= " login ".Security::getUserGroup();
}
$xt->assign("stylename",$style);

;
} // function BeforeShowList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before display
function BeforeShowAdd(&$xt, &$templatefile, $pageObject)
{

		$xt->assign("stylename","sgb_suggestions_add sgb alreadyposted");
$pageObject->AddCSSFile("styles/sgb.css");
;
} // function BeforeShowAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before record added
function BeforeAdd(&$values, &$message, $inline, $pageObject)
{

		if(!Security::isLoggedIn()){
	if(!isset($_COOKIE["sgb_gsid"])){
		$sgb_gsid = time();
		runner_setcookie("sgb_gsid", $sgb_gsid, time() + 5 * 365 * 86400, "", "", false, false);
		runner_setcookie("sgb_name", $values["name"], time() + 5 * 365 * 86400, "", "", false, false);
		runner_setcookie("sgb_email", $values["email"], time() + 5 * 365 * 86400, "", "", false, false);
	}
	else{
		$sgb_gsid = $_COOKIE["sgb_gsid"];
	}
}
if(Security::getUserGroup() === "admin") {
	$values["status"] = "approved";
	$values["suggested_by"] = $_SESSION["uid"];
}
else {
	$values["status"] = "awaiting_approval";
	$values["suggested_by"] = $sgb_gsid;
}
$ts = time();
$values["created_date"] = getYMDdate($ts) . " " . getHISdate($ts);
return true;


;
} // function BeforeAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// After record added
function AfterAdd(&$values, &$keys, $inline, $pageObject)
{

		
HeaderRedirect("sgb_comments","list","masterkey1=".$keys["id"]."&mastertable=sgb_suggestions");
exit();
;
} // function AfterAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before display
function BeforeShowEdit(&$xt, &$templatefile, $values, $pageObject)
{

		$xt->assign("stylename","sgb_suggestions_add sgb");
$pageObject->AddCSSFile("styles/sgb.css");
;
} // function BeforeShowEdit

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// After record updated
function AfterEdit(&$values, $where, &$oldvalues, &$keys, $inline, $pageObject)
{

		HeaderRedirect("sgb_comments","list","masterkey1=".$keys["id"]."&mastertable=sgb_suggestions");
exit();
;
} // function AfterEdit

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Process record values
function ProcessValuesAdd(&$values, $pageObject)
{

		if(Security::getUserGroup() === "admin"){
	$values["name"] = $_SESSION["udata"][GetDisplayNameField()];
	$values["email"] = $_SESSION["udata"][GetEmailField()];
}
if(!Security::isLoggedIn()){
	if(isset($_COOKIE["sgb_gsid"])){
		$values["name"] = $_COOKIE["sgb_name"];
		$values["email"] = $_COOKIE["sgb_email"];
	}

}
;
} // function ProcessValuesAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>