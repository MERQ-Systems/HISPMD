<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_mfr_facility  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["selectList"]=true;


	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// List
function selectList($dataSource, $command)
{

		$method = "GET";
$url = "/mfrapi.php";

// Replace variables in the URL
$url = RunnerContext::PrepareRest($url);

// Initialize parameters with initial values
$statusId = isset($_GET['statusId']) ? urldecode($_GET['statusId']) : '3'; //3
$operationalStatusId = isset($_GET['operationalStatusId']) ? urldecode($_GET['operationalStatusId']) : '1'; //2
$facilityTypeId = isset($_GET['facilityTypeId']) ? urldecode($_GET['facilityTypeId']) : '28'; //28
$parentFacilityTypeId = isset($_GET['parentFacilityTypeId']) ? urldecode($_GET['parentFacilityTypeId']) : '3'; //3
$regionId = isset($_GET['regionId']) ? urldecode($_GET['regionId']) : '1'; //1
$zoneId = isset($_GET['zoneId']) ? urldecode($_GET['zoneId']) : '9'; //9
$woredaId = isset($_GET['woredaId']) ? urldecode($_GET['woredaId']) : '102'; //101

// Construct the URL with query parameters
$queryParams = [];
if (!empty($statusId)) $queryParams[] = "statusId=" . urlencode($statusId);
if (!empty($operationalStatusId)) $queryParams[] = "operationalStatusId=" . urlencode($operationalStatusId);
if (!empty($facilityTypeId)) $queryParams[] = "facilityTypeId=" . urlencode($facilityTypeId);
if (!empty($parentFacilityTypeId)) $queryParams[] = "parentFacilityTypeId=" . urlencode($parentFacilityTypeId);
if (!empty($regionId)) $queryParams[] = "regionId=" . urlencode($regionId);
if (!empty($zoneId)) $queryParams[] = "zoneId=" . urlencode($zoneId);
if (!empty($woredaId)) $queryParams[] = "woredaId=" . urlencode($woredaId);

// Append query parameters to the URL
if (!empty($queryParams)) {
    $url .= '?' . implode('&', $queryParams);
}

// Log constructed URL for debugging
error_log("API URL: " . $url);

// Do the API request
$response = $dataSource->getConnection()->requestJson($url, $method);
if ($response === false) {
    // Something went wrong
    $dataSource->setError($dataSource->getConnection()->lastError());
    error_log("Request failed: " . $dataSource->getConnection()->lastError());
    return false;
}

// Log API response for debugging
error_log("API Response: " . $response);

// Convert API result into recordset
$rs = $dataSource->resultFromJson($response, true);
if (!$rs) {
    error_log("Error processing data");
    return false;
}

// Apply search and filter parameters
$rs = $dataSource->filterResult($rs, $command->filter);

// Apply order parameters
$rs = $dataSource->reorderResult($command, $rs);

// Apply pagination
$rs->seekRecord($command->startRecord);
return $rs;

;
} // function selectList

		
		
		
		
		



}
?>